#!/bin/bash

set -e

# Source common utilities
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
source "$SCRIPT_DIR/../../utils/common.sh"

detect_os

install_from_github() {
    log_info "Installing fd from GitHub releases..."
    
    # Detect architecture
    ARCH=$(uname -m)
    case "$ARCH" in
        x86_64)
            ARCH_STRING="x86_64"
            ;;
        aarch64|arm64)
            ARCH_STRING="aarch64"
            ;;
        *)
            log_warning "Unsupported architecture: $ARCH"
            exit 1
            ;;
    esac
    
    # Detect OS for download
    if [[ "$OS" == "macos" ]]; then
        OS_STRING="apple-darwin"
    else
        OS_STRING="unknown-linux-gnu"
    fi
    
    # Get latest version
    LATEST_VERSION=$(curl -s https://api.github.com/repos/sharkdp/fd/releases/latest | grep '"tag_name":' | sed -E 's/.*"v([^"]+)".*/\1/')
    
    # Download and install
    TEMP_DIR=$(mktemp -d)
    cd "$TEMP_DIR"
    
    DOWNLOAD_URL="https://github.com/sharkdp/fd/releases/download/v${LATEST_VERSION}/fd-v${LATEST_VERSION}-${ARCH_STRING}-${OS_STRING}.tar.gz"
    log_info "Downloading from: $DOWNLOAD_URL"
    
    curl -L -o fd.tar.gz "$DOWNLOAD_URL"
    tar xzf fd.tar.gz
    
    # Find the fd binary and install it
    FD_BIN=$(find . -name "fd" -type f | head -n1)
    if [[ -n "$FD_BIN" ]]; then
        safe_sudo mv "$FD_BIN" /usr/local/bin/fd
        sudo chmod +x /usr/local/bin/fd
        log_success "fd installed to /usr/local/bin/fd"
    else
        log_warning "Could not find fd binary in archive"
        exit 1
    fi
    
    # Cleanup
    cd - > /dev/null
    rm -rf "$TEMP_DIR"
}

setup_fd_aliases() {
    log_info "Setting up fd aliases..."
    
    local aliases="
# fd aliases
alias fdd='fd --type d'      # directories only
alias fdf='fd --type f'      # files only
alias fdh='fd --hidden'      # include hidden files
alias fde='fd --extension'   # search by extension
alias fdi='fd --ignore-case' # case insensitive
alias fdx='fd --type x'      # executable files
alias fds='fd --size'        # filter by size
"
    
    # Add to zshrc if it exists
    if [[ -f "$HOME/.zshrc" ]]; then
        if ! grep -q "# fd aliases" "$HOME/.zshrc"; then
            echo "$aliases" >> "$HOME/.zshrc"
            log_success "Added fd aliases to .zshrc"
        else
            log_info "fd aliases already configured in .zshrc"
        fi
    fi
    
    # Add to bashrc if it exists
    if [[ -f "$HOME/.bashrc" ]]; then
        if ! grep -q "# fd aliases" "$HOME/.bashrc"; then
            echo "$aliases" >> "$HOME/.bashrc"
            log_success "Added fd aliases to .bashrc"
        else
            log_info "fd aliases already configured in .bashrc"
        fi
    fi
    
    # Ensure ~/.local/bin is in PATH
    ensure_local_bin_in_path
}

ensure_local_bin_in_path() {
    local path_addition='
# Add ~/.local/bin to PATH if it exists
if [ -d "$HOME/.local/bin" ] ; then
    export PATH="$HOME/.local/bin:$PATH"
fi'
    
    if [[ -f "$HOME/.zshrc" ]]; then
        if ! grep -q "HOME/.local/bin" "$HOME/.zshrc"; then
            echo "$path_addition" >> "$HOME/.zshrc"
            log_info "Added ~/.local/bin to PATH in .zshrc"
        fi
    fi
    
    if [[ -f "$HOME/.bashrc" ]]; then
        if ! grep -q "HOME/.local/bin" "$HOME/.bashrc"; then
            echo "$path_addition" >> "$HOME/.bashrc"
            log_info "Added ~/.local/bin to PATH in .bashrc"
        fi
    fi
}

# Main installation
main() {
    log_info "Setting up fd..."
    
    install_fd
    setup_fd_aliases
    
    log_success "fd setup complete!"
    echo
    echo "fd - A simple, fast alternative to 'find'"
    echo
    echo "Common commands:"
    echo "  fd pattern           - Find files/dirs matching pattern"
    echo "  fd -e txt            - Find all .txt files"
    echo "  fd -t d pattern      - Find directories only"
    echo "  fd -t f pattern      - Find files only"
    echo "  fd -H pattern        - Include hidden files"
    echo "  fd -I pattern        - Don't respect .gitignore"
    echo
    echo "Configured aliases: fdd, fdf, fdh, fde, fdi, fdx, fds"
}

main "$@"
